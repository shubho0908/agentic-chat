# Encryption (REQUIRED for API key storage)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
ENCRYPTION_KEY=your-64-character-hex-encryption-key-here

# OpenAI API (Optional - for server-side fallback when users don't use BYOK)
OPENAI_API_KEY=sk-...
OPENAI_MODEL=model-id

# Qdrant Vector Database (REQUIRED - for semantic caching, memory, and RAG)
# Supports both local and cloud instances with automatic detection
#
# For LOCAL Qdrant:
# - Install: docker run -p 6333:6333 qdrant/qdrant
# - Set QDRANT_URL (protocol optional, will default to http://)
# - Leave QDRANT_API_KEY empty or unset
QDRANT_URL=localhost:6333
#
# For CLOUD Qdrant:
# - Set QDRANT_URL to your cloud instance (protocol optional, will default to https://)
# - Set QDRANT_API_KEY to your cluster API key
# QDRANT_URL=your-cluster.region.cloud.qdrant.io:6333
# QDRANT_API_KEY=your-qdrant-cloud-api-key
#
DOCUMENTS_COLLECTION_NAME=documents
EMBEDDING_MODEL=text-embedding-3-large
EMBEDDING_DIMENSIONS=3072 # text-embedding-3-large = 3072, text-embedding-3-small = 1536
CACHE_COLLECTION_NAME=semantic_cache
MEMORY_COLLECTION_NAME=user_memories
DOCUMENTS_COLLECTION_NAME=rag_documents
CACHE_TTL_SECONDS=3600 # Cache time-to-live in seconds (default: 3600 = 1 hour)

# Database (PostgreSQL for authentication)
# For Neon: Use the pooled URL (with -pooler) for DATABASE_URL
# and the direct URL (without -pooler) for DIRECT_DATABASE_URL
DATABASE_URL=postgresql://user:password@host-pooler.region.aws.neon.tech:5432/dbname?sslmode=require
DIRECT_DATABASE_URL=postgresql://user:password@host.region.aws.neon.tech:5432/dbname?sslmode=require

# Authentication (Better Auth)
BETTER_AUTH_SECRET=your-secret-key-here # Generate with: openssl rand -base64 32
BETTER_AUTH_URL=http://localhost:3000
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Google OAuth (Get from: https://console.cloud.google.com/apis/credentials)
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# UploadThing (for file uploads)
UPLOADTHING_TOKEN=your-uploadthing-token