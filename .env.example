# Encryption (REQUIRED for API key storage)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
ENCRYPTION_KEY=your-64-character-hex-encryption-key-here

# OpenAI API (Optional - for server-side fallback when users don't use BYOK)
OPENAI_API_KEY=sk-...
OPENAI_MODEL=model-id

# Qdrant Vector Database (for semantic caching)
QDRANT_URL=http://localhost:6333
EMBEDDING_MODEL=embedding-model-id
CACHE_COLLECTION_NAME=
CACHE_TTL_SECONDS=3600 # Cache time-to-live in seconds (default: 3600 = 1 hour)

# Database (PostgreSQL for authentication)
# For Neon: Use the pooled URL (with -pooler) for DATABASE_URL
# and the direct URL (without -pooler) for DIRECT_DATABASE_URL
DATABASE_URL=postgresql://user:password@host-pooler.region.aws.neon.tech:5432/dbname?sslmode=require
DIRECT_DATABASE_URL=postgresql://user:password@host.region.aws.neon.tech:5432/dbname?sslmode=require

# Authentication (Better Auth)
BETTER_AUTH_SECRET=your-secret-key-here # Generate with: openssl rand -base64 32
BETTER_AUTH_URL=http://localhost:3000
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Google OAuth (Get from: https://console.cloud.google.com/apis/credentials)
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# UploadThing (for file uploads)
UPLOADTHING_TOKEN=your-uploadthing-token