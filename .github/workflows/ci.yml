name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
      - name: Setup environment
        run: |
          cp .env.example .env
          sed -i 's|ENCRYPTION_KEY=.*|ENCRYPTION_KEY='$(openssl rand -hex 32)'|' .env
          sed -i 's|BETTER_AUTH_SECRET=.*|BETTER_AUTH_SECRET='$(openssl rand -base64 32)'|' .env
          sed -i 's|DATABASE_URL=.*|DATABASE_URL=postgresql://user:password@localhost:5432/testdb|' .env
          sed -i 's|DIRECT_DATABASE_URL=.*|DIRECT_DATABASE_URL=postgresql://user:password@localhost:5432/testdb|' .env
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run lint
        run: pnpm run lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
      - name: Setup environment
        run: |
          cp .env.example .env
          sed -i 's|ENCRYPTION_KEY=.*|ENCRYPTION_KEY='$(openssl rand -hex 32)'|' .env
          sed -i 's|BETTER_AUTH_SECRET=.*|BETTER_AUTH_SECRET='$(openssl rand -base64 32)'|' .env
          sed -i 's|DATABASE_URL=.*|DATABASE_URL=postgresql://user:password@localhost:5432/testdb|' .env
          sed -i 's|DIRECT_DATABASE_URL=.*|DIRECT_DATABASE_URL=postgresql://user:password@localhost:5432/testdb|' .env
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm run build
